{"version":3,"sources":["pages/LoginScreen.jsx","components/NavBar.jsx","components/Card.jsx","pages/RegistroScreen.jsx","pages/ParticipantesScreen.jsx","pages/ModificarScreen.jsx","routes/AppRouter.jsx","routes/LoginRouter.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["LoginScreen","history","className","src","width","height","alt","onClick","push","NavBar","useHistory","type","id","to","align","Card","nombre","apellidos","twitter","email","path","avatar","style","href","xmlns","fill","class","viewBox","d","RegistroScreen","arreglo","consulta","JSON","parse","localStorage","getItem","useState","participantes","setParticipantes","React","checked","setChecked","setAvatar","handleChange","e","preventDefault","target","name","value","actionAdd","uuid","handleLista","onChange","autoComplete","setItem","stringify","alert","ListaParticipantes","handleRegistro","participante","filter","el","map","par","ModificarScreen","useParams","console","log","local","p","find","data","setData","useEffect","document","getElementById","AppRouter","exact","component","ParticipantesScreen","LoginRouter","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.104e487b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst LoginScreen = ({ history }) => {\r\n\r\n    const handleLogin = () => {\r\n        history.push(\"/listaparticipantes\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5 text-center\">\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                    <img src=\"assets/utl.png\" width=\"85%\" height=\"80%\" alt=\"animacion\" />\r\n                    <h1 className=\"my-3\">Congreso de Tecnologías de la Información</h1>\r\n                    <button className=\"btn btn-primary\" onClick={handleLogin}>Entrar</button>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <img src=\"assets/Tics.png\" alt=\"animacion\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React from 'react'\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\n\r\nconst NavBar = () => {\r\n    //Definimos el history usando el hook useHistory\r\n    const history = useHistory();\r\n\r\n    const handleLogout = () =>{\r\n        history.replace(\"/login\")\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light \">\r\n            <div className=\"container-fluid\">\r\n                    <img src=\"assets/Tics.png\" width=\"5%\" height=\"5%\" alt=\"animacion\" />\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\" />\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav me-auto mb-auto mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link active\" aria-current=\"page\" to=\"/inicio\">Inicio</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link active\" aria-current=\"page\" to=\"/listaparticipantes\">Participantes</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link active\" aria-current=\"page\" to=\"/registro\">Registro</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                    <div>\r\n                    <img align=\"right\" src=\"assets/utl.png\" width=\"15%\" height=\"15%\" alt=\"animacion\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Card = ({nombre,apellidos, twitter, email,id,avatar}) => {\r\n   \r\n    let path=\"\";\r\n\r\n    switch (avatar) {\r\n        case 1:\r\n            path=\"https://i.pinimg.com/736x/4b/1a/41/4b1a41edd5c8f7cf44834cd24f9b1cc7.jpg\";\r\n            break;\r\n        case 2:\r\n            path=\"https://i.pinimg.com/originals/cc/8c/b4/cc8cb40099d7e044369ececfbc713a99.jpg\";\r\n            break;\r\n        case 3:\r\n            path=\"https://image-aws-us-west-2.vsco.co/79af08/182455082/5f3db7a18cbbf07672000007/vsco5f3db7ab05e97.jpg\";\r\n            break;\r\n        default:\r\n            path=\"https://i.pinimg.com/originals/77/a2/52/77a25255f8a124fbd17502c5e74e1edc.jpg\";\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <div className=\"card m-3 col-12 col-md-4\" style={{width: 400}}>\r\n            <img className=\"card-img-top\" src={path} alt=\"Avatar\"/>\r\n            <div className=\"card-body\">\r\n                <h3 className=\"card-title\">{nombre} {apellidos}</h3>\r\n                <p className=\"card-text\">\r\n                    <a href={`https://twitter.com/@${twitter}`}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-twitter\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M5.026 15c6.038 0 9.341-5.003 9.341-9.334 0-.14 0-.282-.006-.422A6.685 6.685 0 0 0 16 3.542a6.658 6.658 0 0 1-1.889.518 3.301 3.301 0 0 0 1.447-1.817 6.533 6.533 0 0 1-2.087.793A3.286 3.286 0 0 0 7.875 6.03a9.325 9.325 0 0 1-6.767-3.429 3.289 3.289 0 0 0 1.018 4.382A3.323 3.323 0 0 1 .64 6.575v.045a3.288 3.288 0 0 0 2.632 3.218 3.203 3.203 0 0 1-.865.115 3.23 3.23 0 0 1-.614-.057 3.283 3.283 0 0 0 3.067 2.277A6.588 6.588 0 0 1 .78 13.58a6.32 6.32 0 0 1-.78-.045A9.344 9.344 0 0 0 5.026 15z\"></path>\r\n                        </svg>\r\n                        @{twitter}\r\n                    </a>\r\n                    <br />\r\n                    <br />\r\n                    <Link className=\"btn btn-warning\" to={`/modificarScreen/${id}`}>\r\n                        Modificar\r\n                    </Link>\r\n                    <h4>Mail: {email}</h4>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { useLocation } from \"react-router\";\r\nimport queryString from \"query-string\";\r\nimport { Participantes } from \"../models/Participantes\";\r\nimport Card from \"../components/Card.jsx\";\r\n\r\n\r\nconst RegistroScreen = ({ history }) => {\r\n\r\n    var arreglo=[]\r\n    var consulta=JSON.parse(localStorage.getItem('participantes'))\r\n    if (consulta==null) {\r\n        arreglo.push(consulta)\r\n    }else{\r\n        \r\n    arreglo=consulta\r\n    }\r\n\r\n\r\n    const [participantes, setParticipantes] = useState({nombre: \"\", apellidos: \"\", email: \"\", twitter: \"\", avatar:0});\r\n\r\n    const { nombre, apellidos, email, twitter} = participantes\r\n\r\n    const [checked, setChecked] = React.useState(false);\r\n\r\n    const [avatar, setAvatar] = React.useState(0);\r\n\r\n    // Definimos la función handleChange\r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n        setParticipantes({\r\n            ...participantes,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    const actionAdd = {\r\n        id: uuid(),\r\n        nombre,\r\n        apellidos,\r\n        email,\r\n        twitter,\r\n        avatar\r\n    }\r\n    const handleClick = () => {\r\n\r\n        if(checked){\r\n            if (nombre && apellidos && email && twitter &&(avatar!=0)) {\r\n                arreglo.push(actionAdd)\r\n                localStorage.setItem(\"participantes\", JSON.stringify(arreglo))\r\n                setParticipantes( {\r\n                    nombre: \"\",\r\n                    apellidos: \"\",\r\n                    email: \"\",\r\n                    twitter: \"\",\r\n                    avatar:0\r\n                });\r\n                handleLista()\r\n            }else {\r\n                alert('Debes completar todos los campos');\r\n              }\r\n        }else{\r\n            alert(\"Acpeta los terminos y condiciones\");\r\n        }\r\n    }\r\n\r\n    const handleLista = () => {\r\n        history.push(\"/listaparticipantes\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Registro de participante</h1>\r\n            <hr />\r\n            <label className=\"mx-1 d-grid gap-2\">\r\n                Nombre: {\" \"}\r\n                <input onChange={handleChange}\r\n                    name=\"nombre\"\r\n                    value={nombre}\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    autoComplete=\"off\" />\r\n            </label>\r\n            <label className=\"mx-1 d-grid gap-2\">\r\n                Apellidos: {\" \"}\r\n                <input\r\n                    onChange={handleChange}\r\n                    name=\"apellidos\"\r\n                    value={apellidos}\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    autoComplete=\"off\" />\r\n            </label>\r\n            <label className=\"mx-1 d-grid gap-2\">\r\n                Email: {\" \"}\r\n                <input\r\n                    onChange={handleChange}\r\n                    name=\"email\"\r\n                    value={email}\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    autoComplete=\"off\" />\r\n            </label>\r\n            <label className=\"mx-1 d-grid gap-2\">\r\n                Twitter: {\" \"}\r\n                <input onChange={handleChange}\r\n                    name=\"twitter\"\r\n                    value={twitter}\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    autoComplete=\"off\" />\r\n            </label>\r\n            <br />\r\n            <div className=\"row\">\r\n                <div className=\"col-4\">\r\n                    <center>\r\n                        <img src=\"https://i.pinimg.com/736x/4b/1a/41/4b1a41edd5c8f7cf44834cd24f9b1cc7.jpg\" alt=\"Avatar 1\" width=\"250px\" height=\"250px\"/>\r\n                        <br />\r\n                        <input type=\"checkbox\"onChange={() => setAvatar(1)}/>\r\n                        avatar 1\r\n                    </center>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <center>\r\n                        <img src=\"https://i.pinimg.com/originals/cc/8c/b4/cc8cb40099d7e044369ececfbc713a99.jpg\" alt=\"Avatar 2\" width=\"250px\" height=\"250px\" />\r\n                        <br />\r\n                        <input type=\"checkbox\"onChange={() => setAvatar(2)}/>\r\n                        avatar 2\r\n                    </center>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <center>\r\n                        <img src=\"https://image-aws-us-west-2.vsco.co/79af08/182455082/5f3db7a18cbbf07672000007/vsco5f3db7ab05e97.jpg\" alt=\"Avatar 3\" width=\"250px\" height=\"250px\"/>\r\n                        <br />\r\n                        <input type=\"checkbox\"onChange={() => setAvatar(3)}/>\r\n                        avatar 3\r\n                    </center>\r\n                </div>\r\n            </div>\r\n            <label className=\"\">\r\n                <input type=\"checkbox\"\r\n                    onChange={() => setChecked(true)}\r\n                />     Lei y acepto los terminos y condiciones\r\n            </label>\r\n            <div className=\"mx-1 d-grid gap-2\">\r\n                <button onClick={handleClick} className=\"btn btn-success mt-2\">Guardar</button>\r\n            </div>\r\n            <br />\r\n            <br />\r\n        </div>\r\n    );\r\n};\r\nexport default RegistroScreen;\r\n","import React, { useEffect, useState } from 'react'\r\n// import { Participantes } from \"../models/Participantes\";\r\nimport Card from \"../components/Card.jsx\";\r\n\r\nconst ListaParticipantes = ({ history }) => {\r\n    const handleRegistro = () => {\r\n        history.push(\"/registro\")\r\n    }\r\n\r\n    var participantes = []\r\n    participantes = JSON.parse(localStorage.getItem('participantes'))\r\n    if (participantes != null) {\r\n        const participante = participantes.filter(el => el != null)\r\n\r\n        return (\r\n            <div className=\"container mt-5\">\r\n                <div>\r\n                    <button className=\"btn btn-primary\" onClick={handleRegistro}>Agregar</button>\r\n                </div>\r\n                <hr />\r\n                <div>\r\n                    {participante.map((par) => (\r\n                        <Card key={par.id} {...par} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container mt-5\">\r\n                <div>\r\n                    <button className=\"btn btn-primary\" onClick={handleRegistro}>Agregar</button>\r\n                </div>\r\n                <hr />\r\n                <div className=\"row\">\r\n                    <h1>No hay participantes</h1>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListaParticipantes\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { useLocation,useParams } from \"react-router\";\r\n\r\nconst ModificarScreen = ({ history }) => {\r\n\r\n    const { id } = useParams();\r\n    console.log(id);\r\n    var local =[];\r\n\r\n    local = JSON.parse(localStorage.getItem('participantes'));\r\n    // var p;\r\n    const participante = local.filter(el => el != null)\r\n    const p = participante.find((p) => p.id === id)\r\n    // console.log(p);\r\n\r\n    const [data, setData] = useState({ nombre: p.nombre, apellidos: p.apellidos, email: p.email, twitter: p.twitter, avatar: p.avatar });\r\n  \r\n    const { nombre, apellidos, email, twitter} = data;\r\n\r\n    const [checked, setChecked] = React.useState(false);\r\n\r\n    const [avatar, setAvatar] = React.useState(0);\r\n\r\n    //marcamos el radio del avatar\r\n    useEffect(() => {\r\n        switch (p.avatar) {\r\n            case 1:\r\n                document.getElementById(\"avatar1\").checked = true;\r\n\r\n                break;\r\n            case 2:\r\n                document.getElementById(\"avatar2\").checked = true;\r\n                \r\n                break;\r\n            case 3:\r\n                document.getElementById(\"avatar3\").checked = true;\r\n\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }, [])\r\n   //Definimos la funcion handleChange //uso el metodo de abajao para agregar los valores\r\n   const handleChange = (e) => {\r\n    setData({\r\n      ...data,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleClick = () => {\r\n    //invocamos el dispatch, todos los dispatch van a tener referencia directa con el reducer a ejecutar, debemos pasarle un action\r\n    \r\n    if(checked){\r\n\r\n        if (nombre && apellidos && email && twitter &&(avatar!=0 || p.avatar!=0)) {\r\n      \r\n            p.nombre = data.nombre;\r\n            p.apellidos = data.apellidos;\r\n            p.email = data.email;\r\n            p.twitter = data.twitter;\r\n            p.avatar = avatar;\r\n            \r\n            localStorage.setItem(\"participantes\", JSON.stringify(local));\r\n            setData({ nombre: \"\", apellidos: \"\", email: \"\", twitter: \"\" , avatar:0});\r\n            handleLista()\r\n          } else {\r\n            alert('Debes completar todos los campos');\r\n          }\r\n      \r\n    }else{\r\n        alert('Debes aceptar los terminos y condiciones');\r\n    }\r\n  };\r\n    \r\n    const handleLista = () => {\r\n        history.push(\"/listaparticipantes\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Modificar de participante</h1>\r\n            <hr />\r\n            <label className=\"mx-1 d-grid gap-2\">\r\n                Nombre: {\" \"}\r\n                <input onChange={handleChange}\r\n                    name=\"nombre\"\r\n                    value={nombre}\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    autoComplete=\"off\" />\r\n            </label>\r\n            <label className=\"mx-1 d-grid gap-2\">\r\n                Apellidos: {\" \"}\r\n                <input\r\n                    onChange={handleChange}\r\n                    name=\"apellidos\"\r\n                    value={apellidos}\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    autoComplete=\"off\" />\r\n            </label>\r\n            <label className=\"mx-1 d-grid gap-2\">\r\n                Email: {\" \"}\r\n                <input\r\n                    onChange={handleChange}\r\n                    name=\"email\"\r\n                    value={email}\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    autoComplete=\"off\" />\r\n            </label>\r\n            <label className=\"mx-1 d-grid gap-2\">\r\n                Twitter: {\" \"}\r\n                <input onChange={handleChange}\r\n                    name=\"twitter\"\r\n                    value={twitter}\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    autoComplete=\"off\" />\r\n            </label>\r\n            <br />\r\n            <div className=\"row\">\r\n                <div className=\"col-4\">\r\n                    <label>\r\n                        <center>\r\n                            <img src=\"https://i.pinimg.com/736x/4b/1a/41/4b1a41edd5c8f7cf44834cd24f9b1cc7.jpg\" alt=\"Avatar 1\" width=\"250px\" height=\"250px\"/>\r\n                            <br />\r\n                            <input type=\"checkbox\"onChange={() => setAvatar(1)} id=\"avatar1\" name=\"imagge\"/>\r\n                            avatar 1\r\n                        </center>\r\n                    </label>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <label>\r\n                        <center>\r\n                            <img src=\"https://i.pinimg.com/originals/cc/8c/b4/cc8cb40099d7e044369ececfbc713a99.jpg\" alt=\"Avatar 2\" width=\"250px\" height=\"250px\" />\r\n                            <br />\r\n                            <input type=\"checkbox\"onChange={() => setAvatar(2)} id=\"avatar2\" name=\"imagge\"/>\r\n                            avatar 2\r\n                        </center>\r\n                    </label>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <label>\r\n                        <center>\r\n                            <img src=\"https://image-aws-us-west-2.vsco.co/79af08/182455082/5f3db7a18cbbf07672000007/vsco5f3db7ab05e97.jpg\" alt=\"Avatar 3\" width=\"250px\" height=\"250px\"/>\r\n                            <br />\r\n                            <input type=\"checkbox\"onChange={() => setAvatar(3)} id=\"avatar3\" name=\"imagge\"/>\r\n                            avatar 3\r\n                        </center>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <label className=\"\">\r\n                <input type=\"checkbox\"\r\n                    onChange={() => setChecked(true)}\r\n                />     Lei y acepto los terminos y condiciones\r\n            </label>\r\n            <div className=\"mx-1 d-grid gap-2\">\r\n                <button onClick={handleClick} className=\"btn btn-success mt-2\">Guardar</button>\r\n            </div>\r\n            <br />\r\n            <br />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModificarScreen;","import React,{useReducer,useEffect} from 'react'\r\nimport { Route, Switch } from 'react-router'\r\nimport NavBar from '../components/NavBar'\r\nimport { MensScreen } from '../pages/MensScreen'\r\nimport RegistroScreen from '../pages/RegistroScreen'\r\nimport ParticipantesScreen from '../pages/ParticipantesScreen'\r\nimport ModificarScreen from '../pages/ModificarScreen'\r\nimport LoginScreen from '../pages/LoginScreen'\r\n\r\n\r\nconst AppRouter = () => {\r\n    \r\n    return (\r\n        <>\r\n            <NavBar></NavBar>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={LoginScreen}/>\r\n                <Route exact path=\"/inicio\" component={LoginScreen}/>\r\n                <Route exact path=\"/listaparticipantes\" component={ParticipantesScreen} />\r\n                <Route exact path=\"/registro\" component={RegistroScreen}/>\r\n                <Route exact path=\"/modificarScreen/:id\" component={ModificarScreen}/>\r\n            </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\nimport LoginScreen from '../pages/LoginScreen'\r\nimport AppRouter from './AppRouter'\r\n\r\nconst LoginRouter = () => {\r\n\r\n    \r\n    return (\r\n        <Router>\r\n            <AppRouter></AppRouter>\r\n            <Switch>\r\n                <Route exact path=\"/login\" component={LoginScreen}/>\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default LoginRouter\r\n","import React from 'react'\nimport LoginRouter from './routes/LoginRouter'\n\nconst App = () => {\n  return (\n    <LoginRouter>\n    </LoginRouter>\n    \n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}